// -------------------------------------------------------------
// 
// File Name: hdlsrc\fft_st\ComplexMultiply.v
// Created: 2014-11-25 15:16:14
// 
// Generated by MATLAB 8.5 and HDL Coder 3.6
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: ComplexMultiply
// Source Path: fft_st/fft_st/FFT HDL Optimized/RADIX2FFT_KernelF_3/ComplexMultiply
// Hierarchy Level: 3
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module ComplexMultiply
          (
           clk,
           enb,
           dout_re2,
           dout_im2,
           CONST07P,
           CONST07P_1,
           yX07,
           vX07
          );


  input   clk;
  input   enb;
  input   signed [15:0] dout_re2;  // sfix16
  input   signed [15:0] dout_im2;  // sfix16
  input   signed [15:0] CONST07P;  // sfix16_En14
  input   signed [15:0] CONST07P_1;  // sfix16_En14
  output  signed [31:0] yX07;  // sfix32_En14
  output  signed [31:0] vX07;  // sfix32_En14


  reg signed [15:0] ComplexMultiply_din1_pipe1;  // sfix16
  reg signed [15:0] ComplexMultiply_din2_pipe1;  // sfix16
  reg signed [31:0] ComplexMultiply_mult1_pipe1;  // sfix32
  reg signed [31:0] ComplexMultiply_mult2_pipe1;  // sfix32
  reg signed [15:0] ComplexMultiply_twiddle_re_pipe1;  // sfix16
  reg signed [15:0] ComplexMultiply_twiddle_im_pipe1;  // sfix16
  reg signed [31:0] yX07_1;  // sfix32_En14
  reg signed [31:0] vX07_1;  // sfix32_En14


  // ComplexMultiply
  always @(posedge clk)
    begin : ComplexMultiply_1_process
      if (enb) begin
        yX07_1 <= ComplexMultiply_mult1_pipe1;
        vX07_1 <= ComplexMultiply_mult2_pipe1;
        ComplexMultiply_twiddle_re_pipe1 <= CONST07P;
        ComplexMultiply_twiddle_im_pipe1 <= CONST07P_1;
        ComplexMultiply_din1_pipe1 <= dout_re2;
        ComplexMultiply_din2_pipe1 <= dout_im2;
        ComplexMultiply_mult1_pipe1 <= ComplexMultiply_din1_pipe1 * ComplexMultiply_twiddle_re_pipe1;
        ComplexMultiply_mult2_pipe1 <= ComplexMultiply_din2_pipe1 * ComplexMultiply_twiddle_im_pipe1;
      end
    end



  assign yX07 = yX07_1;

  assign vX07 = vX07_1;

endmodule  // ComplexMultiply

