// -------------------------------------------------------------
// 
// File Name: hdlsrc\fft_st\Radix2ButterlyF.v
// Created: 2014-11-25 15:16:14
// 
// Generated by MATLAB 8.5 and HDL Coder 3.6
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: Radix2ButterlyF
// Source Path: fft_st/fft_st/FFT HDL Optimized/RADIX2FFT_KernelF_1/Radix2ButterlyF
// Hierarchy Level: 3
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module Radix2ButterlyF
          (
           clk,
           reset,
           enb,
           x_re_0,
           in2_re,
           x_im_0,
           in2_im,
           procEnb,
           softReset,
           x_out,
           u_out,
           y_out,
           v_out,
           doutVld
          );


  input   clk;
  input   reset;
  input   enb;
  input   signed [15:0] x_re_0;  // sfix16
  input   signed [15:0] in2_re;  // sfix16
  input   signed [15:0] x_im_0;  // sfix16
  input   signed [15:0] in2_im;  // sfix16
  input   procEnb;
  input   softReset;
  output  signed [15:0] x_out;  // sfix16
  output  signed [15:0] u_out;  // sfix16
  output  signed [15:0] y_out;  // sfix16
  output  signed [15:0] v_out;  // sfix16
  output  doutVld;


  reg signed [16:0] Radix2ButterflyF_din1_re_reg1;  // sfix17
  reg signed [16:0] Radix2ButterflyF_din1_im_reg1;  // sfix17
  reg signed [16:0] Radix2ButterflyF_din2_re_reg1;  // sfix17
  reg signed [16:0] Radix2ButterflyF_din2_im_reg1;  // sfix17
  reg signed [15:0] Radix2ButterflyF_dout1_re_reg;  // sfix16
  reg signed [15:0] Radix2ButterflyF_dout2_re_reg;  // sfix16
  reg signed [15:0] Radix2ButterflyF_dout1_im_reg;  // sfix16
  reg signed [15:0] Radix2ButterflyF_dout2_im_reg;  // sfix16
  reg  Radix2ButterflyF_dinVld_reg1;
  reg  Radix2ButterflyF_dinVld_reg2;
  reg  Radix2ButterflyF_dinVld_reg3;
  reg signed [17:0] Radix2ButterflyF_sum1_re_reg;  // sfix18
  reg signed [17:0] Radix2ButterflyF_sum2_re_reg;  // sfix18
  reg signed [17:0] Radix2ButterflyF_sum1_im_reg;  // sfix18
  reg signed [17:0] Radix2ButterflyF_sum2_im_reg;  // sfix18
  reg signed [16:0] Radix2ButterflyF_din1_re_reg1_next;  // sfix17
  reg signed [16:0] Radix2ButterflyF_din1_im_reg1_next;  // sfix17
  reg signed [16:0] Radix2ButterflyF_din2_re_reg1_next;  // sfix17
  reg signed [16:0] Radix2ButterflyF_din2_im_reg1_next;  // sfix17
  reg signed [15:0] Radix2ButterflyF_dout1_re_reg_next;  // sfix16
  reg signed [15:0] Radix2ButterflyF_dout2_re_reg_next;  // sfix16
  reg signed [15:0] Radix2ButterflyF_dout1_im_reg_next;  // sfix16
  reg signed [15:0] Radix2ButterflyF_dout2_im_reg_next;  // sfix16
  reg  Radix2ButterflyF_dinVld_reg1_next;
  reg  Radix2ButterflyF_dinVld_reg2_next;
  reg  Radix2ButterflyF_dinVld_reg3_next;
  reg signed [17:0] Radix2ButterflyF_sum1_re_reg_next;  // sfix18
  reg signed [17:0] Radix2ButterflyF_sum2_re_reg_next;  // sfix18
  reg signed [17:0] Radix2ButterflyF_sum1_im_reg_next;  // sfix18
  reg signed [17:0] Radix2ButterflyF_sum2_im_reg_next;  // sfix18
  reg signed [15:0] x_out_1;  // sfix16
  reg signed [15:0] y_out_1;  // sfix16
  reg signed [15:0] u_out_1;  // sfix16
  reg signed [15:0] v_out_1;  // sfix16
  reg  doutVld_1;
  reg signed [17:0] Radix2ButterflyF_sra_temp;  // sfix18
  reg signed [17:0] Radix2ButterflyF_sra_temp_0;  // sfix18
  reg signed [17:0] Radix2ButterflyF_sra_temp_1;  // sfix18
  reg signed [17:0] Radix2ButterflyF_sra_temp_2;  // sfix18
  reg signed [17:0] Radix2ButterflyF_t_0_0;  // sfix18
  reg signed [17:0] Radix2ButterflyF_t_1;  // sfix18
  reg signed [17:0] Radix2ButterflyF_t_2_0;  // sfix18
  reg signed [17:0] Radix2ButterflyF_t_3;  // sfix18
  reg signed [17:0] Radix2ButterflyF_t_4_0;  // sfix18
  reg signed [17:0] Radix2ButterflyF_t_5;  // sfix18
  reg signed [17:0] Radix2ButterflyF_t_6_0;  // sfix18
  reg signed [17:0] Radix2ButterflyF_t_7;  // sfix18


  // Radix2ButterflyF
  always @(posedge clk)
    begin : Radix2ButterflyF_process
      if (reset == 1'b1) begin
        Radix2ButterflyF_dout1_re_reg <= 16'sb0000000000000000;
        Radix2ButterflyF_dout2_re_reg <= 16'sb0000000000000000;
        Radix2ButterflyF_dout1_im_reg <= 16'sb0000000000000000;
        Radix2ButterflyF_dout2_im_reg <= 16'sb0000000000000000;
        Radix2ButterflyF_sum1_re_reg <= 18'sb000000000000000000;
        Radix2ButterflyF_sum2_re_reg <= 18'sb000000000000000000;
        Radix2ButterflyF_sum1_im_reg <= 18'sb000000000000000000;
        Radix2ButterflyF_sum2_im_reg <= 18'sb000000000000000000;
        Radix2ButterflyF_din2_re_reg1 <= 17'sb00000000000000000;
        Radix2ButterflyF_din2_im_reg1 <= 17'sb00000000000000000;
        Radix2ButterflyF_din1_re_reg1 <= 17'sb00000000000000000;
        Radix2ButterflyF_din1_im_reg1 <= 17'sb00000000000000000;
        Radix2ButterflyF_dinVld_reg3 <= 1'b0;
        Radix2ButterflyF_dinVld_reg2 <= 1'b0;
        Radix2ButterflyF_dinVld_reg1 <= 1'b0;
      end
      else begin
        if (enb) begin
          Radix2ButterflyF_din1_re_reg1 <= Radix2ButterflyF_din1_re_reg1_next;
          Radix2ButterflyF_din1_im_reg1 <= Radix2ButterflyF_din1_im_reg1_next;
          Radix2ButterflyF_din2_re_reg1 <= Radix2ButterflyF_din2_re_reg1_next;
          Radix2ButterflyF_din2_im_reg1 <= Radix2ButterflyF_din2_im_reg1_next;
          Radix2ButterflyF_dout1_re_reg <= Radix2ButterflyF_dout1_re_reg_next;
          Radix2ButterflyF_dout2_re_reg <= Radix2ButterflyF_dout2_re_reg_next;
          Radix2ButterflyF_dout1_im_reg <= Radix2ButterflyF_dout1_im_reg_next;
          Radix2ButterflyF_dout2_im_reg <= Radix2ButterflyF_dout2_im_reg_next;
          Radix2ButterflyF_dinVld_reg1 <= Radix2ButterflyF_dinVld_reg1_next;
          Radix2ButterflyF_dinVld_reg2 <= Radix2ButterflyF_dinVld_reg2_next;
          Radix2ButterflyF_dinVld_reg3 <= Radix2ButterflyF_dinVld_reg3_next;
          Radix2ButterflyF_sum1_re_reg <= Radix2ButterflyF_sum1_re_reg_next;
          Radix2ButterflyF_sum2_re_reg <= Radix2ButterflyF_sum2_re_reg_next;
          Radix2ButterflyF_sum1_im_reg <= Radix2ButterflyF_sum1_im_reg_next;
          Radix2ButterflyF_sum2_im_reg <= Radix2ButterflyF_sum2_im_reg_next;
        end
      end
    end

  always @(Radix2ButterflyF_din1_re_reg1, Radix2ButterflyF_din1_im_reg1,
       Radix2ButterflyF_din2_re_reg1, Radix2ButterflyF_din2_im_reg1,
       Radix2ButterflyF_dout1_re_reg, Radix2ButterflyF_dout2_re_reg,
       Radix2ButterflyF_dout1_im_reg, Radix2ButterflyF_dout2_im_reg,
       Radix2ButterflyF_dinVld_reg1, Radix2ButterflyF_dinVld_reg2,
       Radix2ButterflyF_dinVld_reg3, Radix2ButterflyF_sum1_re_reg,
       Radix2ButterflyF_sum2_re_reg, Radix2ButterflyF_sum1_im_reg,
       Radix2ButterflyF_sum2_im_reg, x_re_0, in2_re, x_im_0, in2_im, procEnb) begin
    Radix2ButterflyF_din1_re_reg1_next = Radix2ButterflyF_din1_re_reg1;
    Radix2ButterflyF_din1_im_reg1_next = Radix2ButterflyF_din1_im_reg1;
    Radix2ButterflyF_din2_re_reg1_next = Radix2ButterflyF_din2_re_reg1;
    Radix2ButterflyF_din2_im_reg1_next = Radix2ButterflyF_din2_im_reg1;
    Radix2ButterflyF_dout1_re_reg_next = Radix2ButterflyF_dout1_re_reg;
    Radix2ButterflyF_dout2_re_reg_next = Radix2ButterflyF_dout2_re_reg;
    Radix2ButterflyF_dout1_im_reg_next = Radix2ButterflyF_dout1_im_reg;
    Radix2ButterflyF_dout2_im_reg_next = Radix2ButterflyF_dout2_im_reg;
    Radix2ButterflyF_sum1_re_reg_next = Radix2ButterflyF_sum1_re_reg;
    Radix2ButterflyF_sum2_re_reg_next = Radix2ButterflyF_sum2_re_reg;
    Radix2ButterflyF_sum1_im_reg_next = Radix2ButterflyF_sum1_im_reg;
    Radix2ButterflyF_sum2_im_reg_next = Radix2ButterflyF_sum2_im_reg;
    if (Radix2ButterflyF_dinVld_reg2) begin
      Radix2ButterflyF_sra_temp = Radix2ButterflyF_sum1_re_reg >>> 8'd1;
      Radix2ButterflyF_dout1_re_reg_next = Radix2ButterflyF_sra_temp[15:0];
      Radix2ButterflyF_sra_temp_0 = Radix2ButterflyF_sum2_re_reg >>> 8'd1;
      Radix2ButterflyF_dout2_re_reg_next = Radix2ButterflyF_sra_temp_0[15:0];
      Radix2ButterflyF_sra_temp_1 = Radix2ButterflyF_sum1_im_reg >>> 8'd1;
      Radix2ButterflyF_dout1_im_reg_next = Radix2ButterflyF_sra_temp_1[15:0];
      Radix2ButterflyF_sra_temp_2 = Radix2ButterflyF_sum2_im_reg >>> 8'd1;
      Radix2ButterflyF_dout2_im_reg_next = Radix2ButterflyF_sra_temp_2[15:0];
    end
    if (Radix2ButterflyF_dinVld_reg1) begin
      Radix2ButterflyF_t_0_0 = {Radix2ButterflyF_din1_re_reg1[16], Radix2ButterflyF_din1_re_reg1};
      Radix2ButterflyF_t_1 = {Radix2ButterflyF_din2_re_reg1[16], Radix2ButterflyF_din2_re_reg1};
      Radix2ButterflyF_sum1_re_reg_next = Radix2ButterflyF_t_0_0 + Radix2ButterflyF_t_1;
      Radix2ButterflyF_t_2_0 = {Radix2ButterflyF_din1_re_reg1[16], Radix2ButterflyF_din1_re_reg1};
      Radix2ButterflyF_t_3 = {Radix2ButterflyF_din2_re_reg1[16], Radix2ButterflyF_din2_re_reg1};
      Radix2ButterflyF_sum2_re_reg_next = Radix2ButterflyF_t_2_0 - Radix2ButterflyF_t_3;
      Radix2ButterflyF_t_4_0 = {Radix2ButterflyF_din1_im_reg1[16], Radix2ButterflyF_din1_im_reg1};
      Radix2ButterflyF_t_5 = {Radix2ButterflyF_din2_im_reg1[16], Radix2ButterflyF_din2_im_reg1};
      Radix2ButterflyF_sum1_im_reg_next = Radix2ButterflyF_t_4_0 + Radix2ButterflyF_t_5;
      Radix2ButterflyF_t_6_0 = {Radix2ButterflyF_din1_im_reg1[16], Radix2ButterflyF_din1_im_reg1};
      Radix2ButterflyF_t_7 = {Radix2ButterflyF_din2_im_reg1[16], Radix2ButterflyF_din2_im_reg1};
      Radix2ButterflyF_sum2_im_reg_next = Radix2ButterflyF_t_6_0 - Radix2ButterflyF_t_7;
    end
    if (procEnb) begin
      Radix2ButterflyF_din2_re_reg1_next = {in2_re[15], in2_re};
      Radix2ButterflyF_din1_re_reg1_next = {x_re_0[15], x_re_0};
      Radix2ButterflyF_din2_im_reg1_next = {in2_im[15], in2_im};
      Radix2ButterflyF_din1_im_reg1_next = {x_im_0[15], x_im_0};
    end
    Radix2ButterflyF_dinVld_reg3_next = Radix2ButterflyF_dinVld_reg2;
    Radix2ButterflyF_dinVld_reg2_next = Radix2ButterflyF_dinVld_reg1;
    Radix2ButterflyF_dinVld_reg1_next = procEnb;
    x_out_1 = Radix2ButterflyF_dout1_re_reg;
    y_out_1 = Radix2ButterflyF_dout2_re_reg;
    u_out_1 = Radix2ButterflyF_dout1_im_reg;
    v_out_1 = Radix2ButterflyF_dout2_im_reg;
    doutVld_1 = Radix2ButterflyF_dinVld_reg3;
  end



  assign x_out = x_out_1;

  assign u_out = u_out_1;

  assign y_out = y_out_1;

  assign v_out = v_out_1;

  assign doutVld = doutVld_1;

endmodule  // Radix2ButterlyF

